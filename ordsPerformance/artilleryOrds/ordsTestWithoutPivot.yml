config:
  target: http://localhost:8080/ords/ordstest
  phases:
    - duration: 60
      arrivalRate: 1
      rampTo: 5
      name: Warm up phase
    - duration: 60
      arrivalRate: 5
      rampTo: 15
      name: Ramp up phase
    - duration: 180
      arrivalRate: 15
      rampTo: 30
      name: Spike phase
  plugins:
    ensure: {}
    apdex: {}
    metrics-by-endpoint: {}
  apdex:
    threshold: 750
  ensure:
      thresholds:
        - http.response_time.p99: 500
        - http.response_time.p95: 450
scenarios:
  - flow:
      - post:
# I was able to get this to work by taking that "/_/sql" portion of the URI, and placing it here in the "url:" section.
          url: "/_/sql"
# I was able to get this to work as JSON object (this is in the Artillery docs). The newlines (e.g. \n) were tricky, but this DOES work!

# This example below will work, TO A POINT. But you'll soon see, that its not the SQL itself that "craps out", but rather the available connections that become the bottleneck. There will be ALOT of "frustrated" connections, and others that just completely time-out.
          body: |
            {"statementText": "select noc,\n    count ( \n  distinct case \n    when medal = 'Gold' \n    then sport ||'#'|| event ||'#'|| gender \n  end \n    ) Gold,\ncount ( \n  distinct case \n    when medal = 'Silver' \n    then sport ||'#'|| event ||'#'|| gender \n  end \n    ) Silver,\ncount ( \n  distinct case \n    when medal = 'Bronze' \n    then sport ||'#'|| event ||'#'|| gender \n  end \n    ) Bronze\nfrom   olympic_medal_winners\ngroup  by noc\norder  by 2 desc, 3 desc, 4 desc\nfetch first 10 rows only"}
          headers:
            content-Type: application/json
# Displaying the user credentials like this, in Base64 encoding, was the only way I could make this work. A quick way to Base64 encode your credentials and make it "url safe" is like this on the command line (using my credentials as an example): echo -n ordstest:password1234 | base64
            Authorization: Basic b3Jkc3Rlc3Q6cGFzc3dvcmQxMjM0
    count: 100
